/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjetoSoftware;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Emerson
 */
public class formLancaNota extends javax.swing.JFrame {
    
    private Connection con;
    DefaultListModel MODELO;
    private String recebe;
    String Fornecedor;
    int item = 1;
    /**
     * Creates new form formLancaNota
     */
    public formLancaNota() {
        initComponents();
        txtFornecedor.requestFocus();
        txtCodigo.setDocument(new SoNumeros());
      //  txtDesconto.setDocument(new SoNumeros());
        txtQuantidade.setDocument(new SoNumeros());
       // txtTotal.setDocument(new SoNumeros());
        txtNumeroNota.setDocument(new SoNumeros());
        txtFornecedor.setDocument(new SoNumeros());
        txtDesconto.setForeground(Color.RED);
        txtTotal.setForeground(Color.BLUE);
        txtDesconto.setText("0.00");
        txtTotal.setText("0.00");
        carregarImagens();
    }
    
     public void carregarImagens(){
     ImageIcon inserir = new ImageIcon("C:/Imagem/09_Inserir.png");
     ImageIcon editar = new ImageIcon("C:/Imagem/06_Editar.png");
     ImageIcon excluir = new ImageIcon("C:/Imagem/07_Excluir.png");
     ImageIcon pesquisar = new ImageIcon("C:/Imagem/11_Lupa.png");
     ImageIcon excel = new ImageIcon("C:/Imagem/03_Excel.png");
     ImageIcon sair = new ImageIcon("C:/Imagem/08_Fechar.png");
     ImageIcon Limpar = new ImageIcon("C:/Imagem/05_Clear.png");
     ImageIcon Atualizar = new ImageIcon("C:/Imagem/13_Atualizar.png");
     ImageIcon Cadastrar = new ImageIcon("C:/Imagem/14_Cadastrar.png");
     ImageIcon insere = new ImageIcon("C:/Imagem/15_Inserir.png");
     
        btnSalvar.setIcon(inserir);
        btnSair.setIcon(sair);
        btnEditar.setIcon(editar);
        btnExcluir.setIcon(excluir);
        btnCancelar.setIcon(Limpar);
        btnBuscar.setIcon(pesquisar);
        btnCancelarItem.setIcon(Limpar);
        btnInserir.setIcon(insere);
    }

    public void importaProduto(String recebe){
        
        txtCodigo.setText(recebe);
        
    }
     public void importaFornecedor(String recebe){
      //  repaint();
        txtFornecedor.setText(recebe);
       
        
    }
     public void importaNota(String recebe){
        
        txtNumeroNota.setText(recebe);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaItens = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnCancelarItem = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnInserir = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtFornecedor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDesconto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNumeroNota = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lançamento de Notas FIscais");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nota Fiscal de Entrada"));

        jPanel3.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setText("Código do Produto");

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
        });

        TabelaItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Código", "Descrição", "Quantidade"
            }
        ));
        jScrollPane1.setViewportView(TabelaItens);
        if (TabelaItens.getColumnModel().getColumnCount() > 0) {
            TabelaItens.getColumnModel().getColumn(0).setMinWidth(50);
            TabelaItens.getColumnModel().getColumn(0).setMaxWidth(50);
            TabelaItens.getColumnModel().getColumn(1).setMinWidth(50);
            TabelaItens.getColumnModel().getColumn(1).setMaxWidth(50);
            TabelaItens.getColumnModel().getColumn(3).setMinWidth(80);
            TabelaItens.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        jLabel2.setText("Quantidade");

        txtQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuantidadeKeyPressed(evt);
            }
        });

        txtTotal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTotalMouseClicked(evt);
            }
        });
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalKeyPressed(evt);
            }
        });

        jLabel3.setText("Total da Nota");

        btnCancelarItem.setText("cancelar item");
        btnCancelarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarItemActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Ações"));

        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });
        btnInserir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnInserirKeyPressed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInserir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir)
                .addGap(13, 13, 13))
        );

        jLabel4.setText("Fornecedor");

        txtFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFornecedorMouseClicked(evt);
            }
        });
        txtFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFornecedorKeyPressed(evt);
            }
        });

        jLabel5.setText("Data Entrada");

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDataMouseClicked(evt);
            }
        });
        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });
        txtData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDataKeyPressed(evt);
            }
        });

        jLabel6.setText("Desconto");

        txtDesconto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDescontoMouseClicked(evt);
            }
        });
        txtDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescontoKeyPressed(evt);
            }
        });

        jLabel7.setText("Numero da Nota");

        txtNumeroNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroNotaActionPerformed(evt);
            }
        });
        txtNumeroNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroNotaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(btnCancelarItem)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumeroNota)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtNumeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarItem)
                    .addComponent(jLabel6)
                    .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Entrada"));

        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        btnSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvarKeyPressed(evt);
            }
        });

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar)
                    .addComponent(btnEditar)
                    .addComponent(btnSair))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        DefaultTableModel tabela1 = (DefaultTableModel)TabelaItens.getModel();
        int segue = 0;
           int numero = TabelaItens.getRowCount();
           for(int x = 0; x<numero; x++ ){
               String Tabela = TabelaItens.getValueAt(x, 1).toString();
               String Digitado = txtCodigo.getText();
               if(Tabela.trim().equals(Digitado)){
                   JOptionPane.showMessageDialog(null, "PRODUTO JÁ INSERIDO!");
                   segue = 1;
               }
           }
            if(segue == 0) {
                inserir();
            }
    }//GEN-LAST:event_btnInserirActionPerformed

    public void inserir(){
         int teste = 0;
        try {
            this.con = database.getConnection();
            
            Produto PRO = new Produto();
            
            PRO.setCodigo(txtCodigo.getText());
            
            String PROCod = PRO.codigo;
            
            PreparedStatement banco = con.prepareStatement("select * from cpro");
            
            ResultSet rs = banco.executeQuery();
            
            while(rs.next()){
                String PROCodigo = rs.getString("PRO_COD");
                
                if(PROCodigo.trim().equals(PROCod)){
                    String Descricao = rs.getString("PRO_des");
                    String Item = "" + item;
                    DefaultTableModel val = (DefaultTableModel) TabelaItens.getModel();

                    val.addRow(new String[]{Item,PROCodigo,Descricao,txtQuantidade.getText()});

                    teste = 1;
                }
 
            }
            item++;
            if(teste==0) JOptionPane.showMessageDialog(null, "PRODUTO NÃO CADASTRADO NO SISTEMA!");
            txtQuantidade.setText("");
            txtCodigo.setText("");
        } catch (Exception ex) {
            Logger.getLogger(formLancaNota.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtCodigo.requestFocus();
        
    }
    
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
      salvarnota();
    }//GEN-LAST:event_btnSalvarActionPerformed

    public void salvarnota(){
        try {
            this.con = database.getConnection();
             Produto PRO = new Produto();
             int num = 0;
             String Codigo = txtNumeroNota.getText();
         
             PreparedStatement busca = con.prepareStatement("select * from ctenfe where nfeope = 'NFE'");
                    
                 ResultSet rs = busca.executeQuery();
            if(!rs.isBeforeFirst()){
                txtData.requestFocus();
            } else{
                      while(rs.next()){
                         String PROCod = rs.getString("nfenum");
                         if(PROCod.trim().equals(Codigo)){
                            JOptionPane.showMessageDialog(null, "NOTA JÁ DIGITADA NO SISTEMA NÃO PODE SER SALVA!");
                            num = 1;
                         }
                     }
             
                     
            }
            if(num == 0) salvar();
        } catch (Exception ex) {
            Logger.getLogger(formLancaNota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void salvar(){
         String operacao = "NFE",nome = null,endereco = null,bairro = null,cidade = null;
        try {
            this.con = database.getConnection();
            
            Produto PRO = new Produto();
            int quantidade = 0,somaquantidade;
            
            DefaultTableModel val = (DefaultTableModel) TabelaItens.getModel();
            int Total = TabelaItens.getRowCount();
           
            
            for(int x = 0; x<Total;x++){
                
                 PreparedStatement busca = con.prepareStatement("select * from cpro");
            
                 ResultSet rs = busca.executeQuery();
            
                      while(rs.next()){
                         String PROCod = rs.getString("PRO_COD");
                         if(PROCod.trim().equals(TabelaItens.getValueAt(x, 1).toString())){
                             quantidade = rs.getInt("PRO_estoque");
                         }
                     }
 
                String qtd = TabelaItens.getValueAt(x, 3).toString();
                String pro = TabelaItens.getValueAt(x, 1).toString();
                int Qtd = Integer.parseInt(qtd);
                somaquantidade = (quantidade + Qtd);
                 PreparedStatement banco = con.prepareStatement("update cpro set pro_estoque = '"+somaquantidade+"' where pro_cod = '"+pro+"'");
                 banco.execute();
                 try(
                 PreparedStatement banco1 = con.prepareStatement("insert into cteitm (itmitm,itmcodpro,itmdespro,itmqtd,itmope,itmcli,itmnum) values (?,?,?,?,?,?,?)")){

                    banco1.setString(1, TabelaItens.getValueAt(x, 0).toString());
                    banco1.setString(2, TabelaItens.getValueAt(x, 1).toString());
                    banco1.setString(3, TabelaItens.getValueAt(x, 2).toString());
                    banco1.setString(4, TabelaItens.getValueAt(x, 3).toString());
                    banco1.setString(5, operacao);
                    banco1.setString(6, txtFornecedor.getText());
                    banco1.setString(7, txtNumeroNota.getText());
                    banco1.execute();
                 }
                 
            }
           
                 PreparedStatement banco3 = con.prepareStatement("select * from ccli where cli_cod = '"+txtFornecedor.getText()+"'");
                    ResultSet rs1 = banco3.executeQuery();
                    while(rs1.next()){
                        nome = rs1.getString("cli_nome");
                        endereco = rs1.getString("cli_endereco");
                        bairro = rs1.getString("cli_bairro");
                        cidade = rs1.getString("cli_cidade");        
                    }
                 
            try(
                 PreparedStatement banco2 = con.prepareStatement("insert into ctenfe (nfenum,nfevlrtot,nfevlrdes,nfenomecli,nfeendcli,nfeclibai,nfecidcli,nfecodcli,nfeope,nfedat) values (?,?,?,?,?,?,?,?,?,?)")){

                    banco2.setString(1, txtNumeroNota.getText());
                    banco2.setString(2, txtTotal.getText());
                    banco2.setString(3, txtDesconto.getText());
                    banco2.setString(4, nome);
                    banco2.setString(5, endereco);
                    banco2.setString(6, bairro);
                    banco2.setString(7, cidade);
                    banco2.setString(8, txtFornecedor.getText());
                    banco2.setString(9, operacao);
                    banco2.setString(10, txtData.getText());
                    
                    banco2.execute();
                 }
            JOptionPane.showMessageDialog(null, "REGISTRO INSERIDO COM SUCESSO!");
            
            con.close();
            
           
                    
        } catch (Exception ex) {
      //      Logger.getLogger(formLancaNota.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        item = 1;
        cancelar();
    }
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
       cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void cancelar(){
        txtData.setText("");
        txtCodigo.setText("");
        txtDesconto.setText("");
        txtFornecedor.setText("");
        txtNumeroNota.setText("");
        txtQuantidade.setText("");
        txtTotal.setText("");
        txtFornecedor.requestFocus();
         DefaultTableModel val = (DefaultTableModel) TabelaItens.getModel();
         int codigo = TabelaItens.getRowCount();
         for(int x=codigo-1 ; x>=0 ; x--){
             val.removeRow(x);
         }
         item = 1;
         txtNumeroNota.setEditable(true);
    }
    
    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        if(evt.getKeyCode() == 113){
            new formPesquisaProdutoNota().setVisible(true);
            dispose();
        }else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtQuantidade.requestFocus();
        } 
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFornecedorKeyPressed
         if(evt.getKeyCode() == 113){
            new formPesquisaFornecedor().setVisible(true);
           // dispose();
         repaint();
        }else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtNumeroNota.requestFocus();
        } 
    }//GEN-LAST:event_txtFornecedorKeyPressed

    private void txtQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnInserir.requestFocus();
        } 
    }//GEN-LAST:event_txtQuantidadeKeyPressed

    private void txtNumeroNotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroNotaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
            this.con = database.getConnection();
             Produto PRO = new Produto();
             int num = 0;
             String Codigo = txtNumeroNota.getText();
         
             PreparedStatement busca = con.prepareStatement("select * from ctenfe where nfeope = 'NFE'");
                    
                 ResultSet rs = busca.executeQuery();
            if(!rs.isBeforeFirst()){
                txtData.requestFocus();
            } else{
                      while(rs.next()){
                         String PROCod = rs.getString("nfenum");
                         if(PROCod.trim().equals(Codigo)){
                            JOptionPane.showMessageDialog(null, "NOTA JÁ DIGITADA NO SISTEMA!");
                            num = 1;
                         }
                     }
            }
            if(num == 0) txtData.requestFocus();
        } catch (Exception ex) {
            Logger.getLogger(formLancaNota.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } else if(evt.getKeyCode() == 113){
            new formPesquisaNotaEntrada().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_txtNumeroNotaKeyPressed

    private void txtDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtCodigo.requestFocus();
        } 
    }//GEN-LAST:event_txtDataKeyPressed

    private void btnInserirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnInserirKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            inserir();
        } 
    }//GEN-LAST:event_btnInserirKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        int num = 0;
        try {
            this.con = database.getConnection();
            Cliente CLI = new Cliente();
            String codigo = txtNumeroNota.getText();
            String item = null,cod = null,des = null,qtd = null;
            
             PreparedStatement posted = con.prepareStatement("select * from cteitm where itmope = 'NFE'");

            ResultSet rs = posted.executeQuery();
            
            while(rs.next()){
                String Codigo = rs.getString("itmnum");
                if(Codigo.trim().equals(codigo)){
                    item = rs.getString("itmitm");
                    cod = rs.getString("itmcodpro");
                    des = rs.getString("itmdespro");
                    qtd = rs.getString("itmqtd");
                    
                    DefaultTableModel val = (DefaultTableModel) TabelaItens.getModel();
                    
                    val.addRow(new String[]{item,cod,des,qtd});
                    num = 1;
                }
            }
            
            PreparedStatement nota = con.prepareStatement("select * from ctenfe where nfeope = 'NFE'");
            ResultSet rs1 = nota.executeQuery();
            while(rs1.next()){
                String Codigo = rs1.getString("NFENUM");
                if(Codigo.trim().equals(codigo)){
                  //  String Valor = rs1.getString("NFEVLRtot");
                 //  String Desconto = rs1.getString("NFEVLRDES");
                        txtDesconto.setText(rs1.getString("NFEVLRDES"));
                        txtTotal.setText(rs1.getString("NFEVLRtot"));
                        txtData.setText(rs1.getString("nfedat"));
                        txtFornecedor.setText(rs1.getString("nfecodcli"));
                        num = 1;
               }
        
            }
            
        
        } catch (Exception ex) {
            Logger.getLogger(formLancaNota.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(num == 0){
            JOptionPane.showMessageDialog(null, "NOTA NÃO CONTA NA BASE DA DADOS!");
        }else txtNumeroNota.setEditable(false);
        
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        
    }//GEN-LAST:event_txtDataActionPerformed

    private void btnCancelarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarItemActionPerformed
         DefaultTableModel dtm = (DefaultTableModel)TabelaItens.getModel();
        if (TabelaItens.getSelectedRow() >= 0){
            int linha = TabelaItens.getSelectedRow();
            dtm.removeRow(TabelaItens.getSelectedRow());
            TabelaItens.setModel(dtm);
        }else{
            JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
        }
    }//GEN-LAST:event_btnCancelarItemActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "DESEJA REALMENTE EXLUIR ESSA NOTA?");
        if(resposta == JOptionPane.YES_OPTION){
            try {
                this.con = database.getConnection();

                String Codigo = txtNumeroNota.getText();

                PreparedStatement posted = con.prepareStatement("delete from ctenfe where nfenum = '"+Codigo+"' and nfeope = 'NFE'");
                posted.execute();
                posted.close();
            
                PreparedStatement item = con.prepareStatement("delete from cteitm where itmnum = '"+Codigo+"' and itmope = 'NFE'");
                item.execute();
                item.close();
                
                con.close();
                JOptionPane.showMessageDialog(null, "NOTA EXCLUIDA COM SUCESSO");
            } catch (Exception ex) {
                Logger.getLogger(formLancaNota.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else JOptionPane.showMessageDialog(null, "NOTA NÃO FOI ALTERADA!");
        
        cancelar();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtDesconto.requestFocus();
            txtDesconto.selectAll();
        } 
    }//GEN-LAST:event_txtTotalKeyPressed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String operacao = "NFE";
        int quantidade = 0,somaquantidade;
        try {
            this.con = database.getConnection();
            String codigo = txtNumeroNota.getText();
            
            PreparedStatement update = con.prepareStatement("update ctenfe set nfevlrdes = '"+txtDesconto.getText()+"', nfevlrtot = '"+txtTotal.getText()+"', nfedat = '"+txtData.getText()+"' where nfenum = '"+codigo+"'");
            update.execute();
            update.close();
            
            DefaultTableModel val = (DefaultTableModel) TabelaItens.getModel();
            int cod = TabelaItens.getRowCount();
            
            for(int x = 0; x<cod;x++){
                 PreparedStatement busca = con.prepareStatement("select * from cpro");
            
                 ResultSet rs = busca.executeQuery();
            
                      while(rs.next()){
                         String PROCod = rs.getString("PRO_COD");
                         if(PROCod.trim().equals(TabelaItens.getValueAt(x, 1).toString())){
                             quantidade = rs.getInt("PRO_estoque");
                         }
                     }
                String qant = TabelaItens.getValueAt(x, 3).toString();
                String produ = TabelaItens.getValueAt(x, 1).toString();
                int Quantidad = Integer.parseInt(qant);
                somaquantidade = (quantidade + Quantidad);
                PreparedStatement banco = con.prepareStatement("update cpro set pro_estoque = '"+somaquantidade+"' where pro_cod = '"+produ+"'");
               //  banco.execute();
             }
            for(int y=0; y<cod ; y++){

                String itm = TabelaItens.getValueAt(y, 0).toString();
                String codi = TabelaItens.getValueAt(y, 1).toString();
                String Des = TabelaItens.getValueAt(y, 2).toString();
                String Qtd = TabelaItens.getValueAt(y, 3).toString();
                String Fornecedor = txtFornecedor.getText();                                  //     (itmitm,itmcodpro,itmdespro,itmqtd,itmope,itmcli,itmnum)
                try (PreparedStatement banco1 = con.prepareStatement("update cteitm set itmitm = '"+itm+"',itmcodpro = '"+codi+"',itmdespro = '"+Des+"',itmqtd = '"+Qtd+"',itmcli = '"+Fornecedor+"' where itmnum = '"+codigo+"' and itmitm = '"+itm+"'")) {
                    banco1.execute();
                }

                
             }
             
            
            JOptionPane.showMessageDialog(null, "NOTA EDITADA COM SUCESSO!");
        } catch (Exception ex) {
            Logger.getLogger(formLancaNota.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        cancelar();
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtTotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTotalMouseClicked
        txtTotal.selectAll();
    }//GEN-LAST:event_txtTotalMouseClicked

    private void txtDescontoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDescontoMouseClicked
        txtDesconto.selectAll();
    }//GEN-LAST:event_txtDescontoMouseClicked

    private void txtFornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFornecedorMouseClicked
        txtFornecedor.selectAll();
    }//GEN-LAST:event_txtFornecedorMouseClicked

    private void txtDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDataMouseClicked
       
    }//GEN-LAST:event_txtDataMouseClicked

    private void txtNumeroNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroNotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroNotaActionPerformed

    private void txtDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescontoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnSalvar.requestFocus();
        } 
    }//GEN-LAST:event_txtDescontoKeyPressed

    private void btnSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            salvarnota();
        } 
    }//GEN-LAST:event_btnSalvarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formLancaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formLancaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formLancaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formLancaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formLancaNota().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaItens;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelarItem;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtFornecedor;
    private javax.swing.JTextField txtNumeroNota;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
