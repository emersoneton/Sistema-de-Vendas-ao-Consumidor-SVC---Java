/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjetoSoftware;

import java.io.FileNotFoundException;
import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

public final class FormUsuario extends javax.swing.JFrame {

    /**
     * Creates new form FormUsuario
     */
    public FormUsuario()throws FileNotFoundException {
        initComponents();
        this.setLocationRelativeTo(null);//Centralizar Jframe
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);//Não permite editar o tamanho
        carregarImagens();
        txtNovoUsuario.grabFocus();
        //lblCadLogin.setHorizontalAlignment(SwingConstants.CENTER);
    }

    //PARA CHAMAR A CONEXAO
    private Connection con;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNovoUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cmdPermissao = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtConfirmaSenha = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        lblCaracterS = new javax.swing.JLabel();
        lblCadLogin = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulario de cadastro [PERFIL]");

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createTitledBorder(null, "Configuração de perfil ...", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 51)))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(0, 0, 102));

        jLabel1.setText("Usuário:");

        txtSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSenhaActionPerformed(evt);
            }
        });
        txtSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSenhaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSenhaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSenhaKeyTyped(evt);
            }
        });

        jLabel2.setText("Senha:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuração ..."));

        cmdPermissao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMINISTRADOR", "USUÁRIO", "GERENTE" }));

        jLabel3.setText("Permissão:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        txtConfirmaSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtConfirmaSenhaFocusLost(evt);
            }
        });
        txtConfirmaSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmaSenhaActionPerformed(evt);
            }
        });

        jLabel4.setText("Conf. de senha:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtConfirmaSenha)
                    .addComponent(txtSenha)
                    .addComponent(txtNovoUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCaracterS, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNovoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(lblCaracterS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(25, 25, 25))
        );

        lblCadLogin.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCadLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCadLogin.setText("CADASTRO DE LOGIN");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Buscar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCadLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblCadLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void carregarImagens(){
     ImageIcon salvar = new ImageIcon("C:/Imagem/09_Inserir.png");
     ImageIcon editar = new ImageIcon("C:/Imagem/06_Editar.png");
     ImageIcon excluir = new ImageIcon("C:/Imagem/07_Excluir.png");
     ImageIcon pesquisar = new ImageIcon("C:/Imagem/11_Lupa.png");
     ImageIcon sair = new ImageIcon("C:/Imagem/08_Fechar.png");
     ImageIcon usuario = new ImageIcon("C:/Imagem/01_Usuario.png");
          
        btnSalvar.setIcon(salvar);
        btnEditar.setIcon(editar);
        btnExcluir.setIcon(excluir);
        btnPesquisar.setIcon(pesquisar);
        btnSair.setIcon(sair);
        lblCadLogin.setIcon(usuario);
        
        btnSalvar.setHorizontalAlignment(SwingConstants.CENTER);
        btnEditar.setHorizontalAlignment(SwingConstants.CENTER);
        btnExcluir.setHorizontalAlignment(SwingConstants.CENTER);
        btnPesquisar.setHorizontalAlignment(SwingConstants.CENTER);
        btnSair.setHorizontalAlignment(SwingConstants.CENTER);
        lblCadLogin.setHorizontalAlignment(SwingConstants.CENTER);
    }
    
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        String SenhaPassword = new String(this.txtSenha.getPassword());
        String ConfirmaSenha = new String(this.txtConfirmaSenha.getPassword());
        if(txtNovoUsuario.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Campo USUÁRIO de preenchimento obrigatório!", "Mensagem",
                    JOptionPane.INFORMATION_MESSAGE);
            txtNovoUsuario.grabFocus();
            return;
        }
        if(SenhaPassword.equals("")){
            JOptionPane.showMessageDialog(null, "Campo SENHA de preenchimento obrigatório!", "Mensagem",
                    JOptionPane.INFORMATION_MESSAGE);
            txtSenha.grabFocus();
            return;
        }
        if(ConfirmaSenha.equals("")){
            JOptionPane.showMessageDialog(null, "Campo CONFIRMA SENHA de preenchimento obrigatório!", "Mensagem",
                    JOptionPane.INFORMATION_MESSAGE);
            txtConfirmaSenha.grabFocus();
            return;
        }
        
        try {
            this.con = database.getConnection();
            
            //VERIFICAR SE USUÁRIO JÁ EXISTE
            PreparedStatement posted = con.prepareStatement("SELECT USER_NOME,USER_SENHA,USER_TIPO,USER_STATUS FROM CUSER ");

            ResultSet rs = posted.executeQuery();

            while (rs.next()) {
                String linha = rs.getString("USER_NOME");
                if(linha.equals(txtNovoUsuario.getText().trim())){
                    JOptionPane.showMessageDialog(null, "Usuário: " + txtNovoUsuario.getText() + " \n\n"
                            + " já cadastrado no sistema!", "Mensagem",
                    JOptionPane.ERROR_MESSAGE);
                    txtNovoUsuario.setText("");
                    txtNovoUsuario.grabFocus();
                    return;
                }
            }
            
            //CHAMANDO A CLASSE CLIENTE  DO NOME CLI
            Usuario USER = new Usuario();
            
            String password = new String(this.txtSenha.getPassword());
            String confSenha = new String(this.txtConfirmaSenha.getPassword());
            String permissao = String.valueOf(cmdPermissao.getSelectedItem());
            
            if(!confSenha.equals(password)){
                JOptionPane.showMessageDialog(null, "As senhas não conferem!", "Mensagem",
                JOptionPane.ERROR_MESSAGE);
                txtConfirmaSenha.setText("");
                txtConfirmaSenha.grabFocus();
                return;
            }
            
            if(permissao.equals("ADMINISTRADOR")){
                permissao = "M";
            }else if(permissao.equals("USUÁRIO")) {
                permissao = "U";
            }else{
                permissao = "G";
            }
            String valor = "0";
            
           /* MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte messageDigest[] = md.digest(password.getBytes("UFT-8"));
            StringBuffer senhaEncrip = new StringBuffer();
            
            for(byte b : messageDigest){
                senhaEncrip.append(String.format("%02X", 0xFF & b));
            }
            String resultSenha = senhaEncrip.toString();
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            md.update(password.getBytes());
            byte[] hash = md.digest();
            StringBuffer senhaEncrip = new StringBuffer();
            for (int i=0;i<hash.length;i++)
            {
                senhaEncrip.append(Integer.toHexString(hash[i]&0xff));
            }
            String resultSenha = senhaEncrip.toString();
            System.out.println("Senha criptografada: "+resultSenha);*/
            
            //ESCREVENDO OS BOTÕES DENTRO DAS VARIAVEIS CRIADAS NA CLASSE CLIENTE
            USER.setNome(txtNovoUsuario.getText());
           // USER.setSenha(txtSenha.getPassword());
            USER.setPermissao(permissao);
            USER.setStatus(valor);

            //RECEBER TUDO QUE FOI DIGITADO NOS BOTÕES ACIMA
            String USERnome = USER.nome;
           // String USERsenha = USER.senha;
            String USERpermissao = USER.permissao;
            String USERstatus = USER.status;

            //CRIA CONEXAO COM BANCO - PREPAREDSTATEMENT
            PreparedStatement banco = con.prepareStatement("insert into CUSER (USER_NOME,USER_SENHA,USER_TIPO,USER_STATUS) values (?,?,?,?)");
            //PREENCHE OS VALORES DO BANCO
            banco.setString(1, USERnome);
            banco.setString(2, txtConfirmaSenha.getText());
            banco.setString(3, USERpermissao);
            banco.setString(4,USERstatus);
            
            //EXECUTA
            banco.execute();
            banco.close();
            JOptionPane.showMessageDialog(null, "Registro inserido com sucesso!", "Mensagem",
                JOptionPane.INFORMATION_MESSAGE);
            //limpar();
            System.out.println("Gravado!");
            con.close();

        } catch (SQLException e) {
        } catch (Exception ex) {
            Logger.getLogger(formCadastra.class.getName()).log(Level.SEVERE, null, ex);
        }
            JOptionPane.showMessageDialog(null, "USUARIO CADASTRADO COM SUCESSO!");
            limpar();

    }//GEN-LAST:event_btnSalvarActionPerformed

    public void limpar(){
        txtConfirmaSenha.setText("");
        txtNovoUsuario.setText("");
        txtSenha.setText("");
        cmdPermissao.setSelectedItem("ADMINISTRADOR");
    }
    
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if(txtNovoUsuario.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Campo USUÁRIO de preenchimento obrigatório!", "Mensagem",
                    JOptionPane.INFORMATION_MESSAGE);
            txtNovoUsuario.grabFocus();
            return;
        }
        try {
            this.con = database.getConnection();
            //Statement st = con.createStatement();

            //CHAMANDO A CLASSE CLIENTE  DO NOME CLI
            Usuario USER = new Usuario();
            
            //String password = new String(this.txtSenha.getPassword());
            String permissao = String.valueOf(cmdPermissao.getSelectedItem());
            if(permissao.equals("ADMINISTRADOR")){
                permissao = "M";
            }else{
                permissao = "U";
            }
            //String valor = "0";
            //ESCREVENDO OS BOTÕES DENTRO DAS VARIAVEIS CRIADAS NA CLASSE CLIENTE
            USER.setNome(txtNovoUsuario.getText());
            //USER.setSenha(password);
            USER.setPermissao(permissao);
            //USER.setStatus(valor);

            //RECEBER TUDO QUE FOI DIGITADO NOS BOTÕES ACIMA
            String USERnome = USER.nome;
            //String USERsenha = USER.senha;
            String USERpermissao = USER.permissao;
            //String USERstatus = USER.status;

            int resposta = JOptionPane.showConfirmDialog(null,
                "Deseja realmente alterar o USUARIO: [" + USERnome + "] selecionado?",
                "title", JOptionPane.YES_NO_OPTION);

            if (resposta == JOptionPane.YES_OPTION) {
                String sql = "UPDATE CUSER SET USER_TIPO=? WHERE USER_NOME=? ";
                
                PreparedStatement posted = con.prepareStatement(sql);
                posted.setString(1, USERpermissao);
                posted.setString(2, USERnome);
                
                posted.executeUpdate();
                con.close();

                JOptionPane.showMessageDialog(null, "Dado alterado com Sucesso ! ",
                    "", JOptionPane.PLAIN_MESSAGE);
                //limpar();

            } else if (resposta == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Opção cancelada pelo usuário!",
                    "", JOptionPane.PLAIN_MESSAGE);
                //limpar();
            }

        } catch (Exception ex) {
            Logger.getLogger(formCadastra.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if(txtNovoUsuario.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Campo USUÁRIO de preenchimento obrigatório!", "Mensagem",
                    JOptionPane.INFORMATION_MESSAGE);
            txtNovoUsuario.grabFocus();
            return;
        }
        try {
            this.con = database.getConnection();
            //Statement st = con.createStatement();

            //CHAMANDO A CLASSE CLIENTE  DO NOME CLI
            Usuario USER = new Usuario();

            //ESCREVENDO OS BOTÕES DENTRO DAS VARIAVEIS CRIADAS NA CLASSE CLIENTE
            USER.setNome(txtNovoUsuario.getText());

            //RECEBER TUDO QUE FOI DIGITADO NOS BOTÕES ACIMA
            String USERnome = USER.nome;
            
            int resposta = JOptionPane.showConfirmDialog(null,
                "Deseja realmente excluir o Usuário: [" + USERnome + "] selecionado?",
                "title", JOptionPane.YES_NO_OPTION);

            if (resposta == JOptionPane.YES_OPTION) {
                PreparedStatement posted = con.prepareStatement("DELETE FROM CUSER WHERE USER_NOME='" + USERnome + "'");

                JOptionPane.showMessageDialog(null, "Dados Excluidos com Sucesso ! ",
                    "", JOptionPane.PLAIN_MESSAGE);

                posted.executeUpdate();

                con.close();
                //limpar();

            } else if (resposta == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Opção cancelada pelo usuário!",
                    "Mensagem", JOptionPane.PLAIN_MESSAGE);
                //limpar();
            }

        } catch (Exception ex) {
            Logger.getLogger(formCadastra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtConfirmaSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmaSenhaFocusLost
       
    }//GEN-LAST:event_txtConfirmaSenhaFocusLost

    private void txtConfirmaSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmaSenhaActionPerformed
        
    }//GEN-LAST:event_txtConfirmaSenhaActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        if (txtNovoUsuario.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo USUÀRIO de preenchimento obrigatório!",
                    "Mensagem", JOptionPane.INFORMATION_MESSAGE);
            txtNovoUsuario.grabFocus();
            return;
        }
        try {
            this.con = database.getConnection();
            
            //CHAMANDO A CLASSE CLIENTE  DO NOME CLI
            Usuario USER = new Usuario();
            
            String nomeUsuario = txtNovoUsuario.getText();
            
            PreparedStatement posted = con.prepareStatement("SELECT USER_NOME,USER_SENHA,USER_TIPO,USER_STATUS FROM CUSER ");

            ResultSet rs = posted.executeQuery();

            while (rs.next()) {
                String linha = rs.getString("USER_NOME");
                
                if (linha.trim().equals(nomeUsuario)) {
                    String nomeLogin = rs.getString("USER_NOME");
                    String nomePermissao = rs.getString("USER_TIPO");
                    
                    if(nomePermissao.equals("M")){
                        String permissao = "ADMINISTRADOR";
                        txtNovoUsuario.setText(nomeLogin);
                        cmdPermissao.setSelectedItem(permissao);
                    }else{
                        String permissao = "USUÁRIO";
                        txtNovoUsuario.setText(nomeLogin);
                        cmdPermissao.setSelectedItem(permissao);
                    }
                                            
                    JOptionPane.showMessageDialog(null, "Usuário: " + txtNovoUsuario.getText() + "\n"
                            + "Permissão: " + cmdPermissao.getSelectedItem() + "\n\n encontrado com sucesso!",
                            "", JOptionPane.INFORMATION_MESSAGE);

                    con.close();
                    rs.close();
                    posted.close();
                    return;
                }
            }

            JOptionPane.showMessageDialog(null, "Usuário: " + txtNovoUsuario.getText() + "\n\n"
                    + "não localizado, verifique se esta cadastrado no banco de dados!",
                    "", JOptionPane.INFORMATION_MESSAGE);

            con.close();
            rs.close();
            posted.close();
            txtNovoUsuario.setText("");
            txtNovoUsuario.grabFocus();

        } catch (Exception ex) {
            Logger.getLogger(formCadastra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void txtSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyPressed
 /*   String SenhaPassword = new String(this.txtSenha.getPassword());
        if(SenhaPassword.length()<=6){
            lblCaracterS.setText(SenhaPassword.substring(0, 6));
            //SenhaPassword.setEditable(false);
        }*/
    }//GEN-LAST:event_txtSenhaKeyPressed

    private void txtSenhaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyTyped
    }//GEN-LAST:event_txtSenhaKeyTyped

    private void txtSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyReleased
    }//GEN-LAST:event_txtSenhaKeyReleased

    private void txtSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSenhaActionPerformed

    }//GEN-LAST:event_txtSenhaActionPerformed
    
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormUsuario().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(FormUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cmdPermissao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblCadLogin;
    private javax.swing.JLabel lblCaracterS;
    private javax.swing.JPasswordField txtConfirmaSenha;
    private javax.swing.JTextField txtNovoUsuario;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables
}
